version: "3.9"

services:
  mysql:
    image: mysql:8.0
    container_name: setrag-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: setrag
      MYSQL_USER: setrag
      MYSQL_PASSWORD: setragpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:4
    container_name: setrag-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy

  mosquitto:
    image: eclipse-mosquitto:2
    container_name: setrag-mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"

  tracking:
    build:
      context: ../../services/tracking
      dockerfile: Dockerfile
    container_name: setrag-tracking
    restart: unless-stopped
    environment:
      PORT: 8000
    ports:
      - "8001:8000"
    depends_on:
      mysql:
        condition: service_healthy

  ai-agent:
    build:
      context: ../../services/ai-agent
      dockerfile: Dockerfile
    container_name: setrag-ai-agent
    restart: unless-stopped
    environment:
      PORT: 8000
    ports:
      - "8002:8000"

  web-b2c:
    build:
      context: ../../apps/web-b2c
      dockerfile: Dockerfile
    container_name: setrag-web-b2c
    restart: unless-stopped
    environment: {}
    ports:
      - "5173:5173"
    depends_on:
      - ai-agent
      - tracking

  auth:
    build:
      context: ../../services/auth
      dockerfile: Dockerfile
    container_name: setrag-auth
    restart: unless-stopped
    ports:
      - "8101:8000"

  inventory:
    build:
      context: ../../services/inventory
      dockerfile: Dockerfile
    container_name: setrag-inventory
    restart: unless-stopped
    ports:
      - "8102:8000"

  pricing-booking:
    build:
      context: ../../services/pricing-booking
      dockerfile: Dockerfile
    container_name: setrag-pricing-booking
    restart: unless-stopped
    ports:
      - "8103:8000"

  users:
    build:
      context: ../../services/users
      dockerfile: Dockerfile
    container_name: setrag-users
    restart: unless-stopped
    environment:
      USERS_JWT_SECRET: dev-secret-change-me
    ports:
      - "8104:8000"

  inventory-py:
    build:
      context: ../../services/inventory-py
      dockerfile: Dockerfile
    container_name: setrag-inventory-py
    restart: unless-stopped
    ports:
      - "8105:8000"

volumes:
  mysql-data:


